0
00:00:00,000 --> 00:00:00,760


1
00:00:00,760 --> 00:00:03,550
As we discussed in the previous video,

2
00:00:03,550 --> 00:00:06,260
Netflix was willing to pay over one million dollars

3
00:00:06,260 --> 00:00:09,590
for the best user rating algorithm, which

4
00:00:09,590 --> 00:00:12,450
shows how critical the recommendation system is

5
00:00:12,450 --> 00:00:14,100
to their business.

6
00:00:14,100 --> 00:00:18,610
In this video, we'll discuss how recommendation systems work.

7
00:00:18,610 --> 00:00:21,490
Let's start by thinking about the data.

8
00:00:21,490 --> 00:00:25,960
When predicting user ratings, what data could be useful?

9
00:00:25,960 --> 00:00:29,310
There are two main types of data that we could use.

10
00:00:29,310 --> 00:00:33,260
The first is that for every movie in Netflix's database,

11
00:00:33,260 --> 00:00:37,320
we have a ranking from all users who have ranked that movie.

12
00:00:37,320 --> 00:00:41,170
The second is that we know facts about the movie itself--

13
00:00:41,170 --> 00:00:43,740
the actors in the movie, the director,

14
00:00:43,740 --> 00:00:46,160
the genre classifications of the movie,

15
00:00:46,160 --> 00:00:49,370
the year it was released, et cetera.

16
00:00:49,370 --> 00:00:52,540
As an example, suppose we have the following user

17
00:00:52,540 --> 00:00:56,050
ratings for four users and four movies.

18
00:00:56,050 --> 00:01:00,050
Our users are Amy, Bob, Carl, and Dan.

19
00:01:00,050 --> 00:01:04,790
And our movies are Men in Black, Apollo 13, Top Gun,

20
00:01:04,790 --> 00:01:06,530
and Terminator.

21
00:01:06,530 --> 00:01:10,380
The ratings are on a one to five scale, where one is the lowest

22
00:01:10,380 --> 00:01:13,500
rating and five is the highest rating.

23
00:01:13,500 --> 00:01:18,010
The blank entries mean that the user has not rated the movie.

24
00:01:18,010 --> 00:01:21,760
We could suggest to Carl that he watch Men in Black,

25
00:01:21,760 --> 00:01:26,100
since Amy rated it highly. She gave it a rating of five,

26
00:01:26,100 --> 00:01:29,210
and Amy and Carl seem to have similar ratings

27
00:01:29,210 --> 00:01:31,100
for the other movies.

28
00:01:31,100 --> 00:01:34,050
This technique of using other user's ratings

29
00:01:34,050 --> 00:01:38,220
to make predictions is called collaborative filtering.

30
00:01:38,220 --> 00:01:40,810
Note that we're not using any information

31
00:01:40,810 --> 00:01:44,190
about the movie itself here, just the similarity

32
00:01:44,190 --> 00:01:46,570
between users.

33
00:01:46,570 --> 00:01:49,580
Instead, we could use movie information

34
00:01:49,580 --> 00:01:51,520
to predict user ratings.

35
00:01:51,520 --> 00:01:54,560
We saw in the table that Amy liked Men in Black.

36
00:01:54,560 --> 00:01:56,680
She gave it a rating of five.

37
00:01:56,680 --> 00:02:00,650
We know that this movie was directed by Barry Sonnenfeld,

38
00:02:00,650 --> 00:02:04,780
is classified in the genres of action, adventure, sci-fi,

39
00:02:04,780 --> 00:02:09,350
and comedy, and it stars actor Will Smith.

40
00:02:09,350 --> 00:02:12,810
Based on this information, we could make recommendations

41
00:02:12,810 --> 00:02:14,200
to Amy.

42
00:02:14,200 --> 00:02:16,890
We could recommend to Amy another movie

43
00:02:16,890 --> 00:02:21,160
by the same director, Barry Sonnenfeld's movie, Get Shorty.

44
00:02:21,160 --> 00:02:23,120
We can instead recommend the movie

45
00:02:23,120 --> 00:02:25,880
Jurassic Park, which is also classified

46
00:02:25,880 --> 00:02:30,010
in the genres of action, adventure, and sci-fi.

47
00:02:30,010 --> 00:02:33,220
Or we could recommend to Amy another movie starring

48
00:02:33,220 --> 00:02:35,550
Will Smith-- Hitch.

49
00:02:35,550 --> 00:02:38,280
Note that we're not using the ratings of other users

50
00:02:38,280 --> 00:02:41,810
at all here, just information about the movie.

51
00:02:41,810 --> 00:02:44,035
This technique is called content filtering.

52
00:02:44,035 --> 00:02:46,890


53
00:02:46,890 --> 00:02:48,510
There are strengths and weaknesses

54
00:02:48,510 --> 00:02:51,480
to both types of recommendation systems.

55
00:02:51,480 --> 00:02:53,680
Collaborative filtering can accurately

56
00:02:53,680 --> 00:02:56,930
suggest complex items without understanding

57
00:02:56,930 --> 00:02:58,840
the nature of the items.

58
00:02:58,840 --> 00:03:00,990
It didn't matter at all that our items were

59
00:03:00,990 --> 00:03:03,890
movies in the collaborative filtering example.

60
00:03:03,890 --> 00:03:06,820
We were just comparing user ratings.

61
00:03:06,820 --> 00:03:10,450
However, this requires a lot of data about the user

62
00:03:10,450 --> 00:03:13,280
to make accurate recommendations.

63
00:03:13,280 --> 00:03:15,910
Also, when there are millions of items,

64
00:03:15,910 --> 00:03:17,950
it needs a lot of computing power

65
00:03:17,950 --> 00:03:20,900
to compute the user similarities.

66
00:03:20,900 --> 00:03:23,480
On the other hand, content filtering

67
00:03:23,480 --> 00:03:26,370
requires very little data to get started.

68
00:03:26,370 --> 00:03:29,280
But the major weakness of content filtering

69
00:03:29,280 --> 00:03:31,650
is that it can be limited in scope.

70
00:03:31,650 --> 00:03:33,880
You're only recommending similar things

71
00:03:33,880 --> 00:03:36,110
to what the user has already liked.

72
00:03:36,110 --> 00:03:39,050
So the recommendations are often not surprising

73
00:03:39,050 --> 00:03:42,290
or particularly insightful.

74
00:03:42,290 --> 00:03:45,600
Netflix actually uses what's called a hybrid recommendation

75
00:03:45,600 --> 00:03:46,570
system.

76
00:03:46,570 --> 00:03:50,350
They use both collaborative and content filtering.

77
00:03:50,350 --> 00:03:53,400
As an example, consider a collaborative filtering

78
00:03:53,400 --> 00:03:56,540
approach, where we determine that Amy and Carl have

79
00:03:56,540 --> 00:03:58,290
similar preferences.

80
00:03:58,290 --> 00:04:01,130
We could then do content filtering as well,

81
00:04:01,130 --> 00:04:04,180
where we could find that the movie Terminator, which they

82
00:04:04,180 --> 00:04:07,900
both liked, is classified in almost the same set of genres

83
00:04:07,900 --> 00:04:10,540
as Starship Troopers.

84
00:04:10,540 --> 00:04:13,880
So then we could recommend Starship Troopers

85
00:04:13,880 --> 00:04:17,180
to both Amy and Carl, even though neither of them

86
00:04:17,180 --> 00:04:18,890
have seen it before.

87
00:04:18,890 --> 00:04:21,550
If we were only doing collaborative filtering,

88
00:04:21,550 --> 00:04:24,680
one of them would have had to have seen it before.

89
00:04:24,680 --> 00:04:27,380
And if we were only doing content filtering,

90
00:04:27,380 --> 00:04:30,880
we would only be recommending to one user at a time.

91
00:04:30,880 --> 00:04:33,640
So by combining the two methods, the algorithm

92
00:04:33,640 --> 00:04:36,460
can be much more efficient and accurate.

93
00:04:36,460 --> 00:04:40,330
In the next video, we'll see how we can do content filtering

94
00:04:40,330 --> 00:04:43,230
by using a method called clustering.

