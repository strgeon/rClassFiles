0
00:00:00,000 --> 00:00:00,500


1
00:00:00,500 --> 00:00:03,260
We were able to solve our sports scheduling problem

2
00:00:03,260 --> 00:00:07,590
with four teams, 24 decision variables, and 22

3
00:00:07,590 --> 00:00:10,290
basic constraints pretty quickly.

4
00:00:10,290 --> 00:00:14,100
However, the problem size increases rapidly.

5
00:00:14,100 --> 00:00:16,940
The same problem with 10 teams would

6
00:00:16,940 --> 00:00:23,810
have 585 decision variables, and 175 basic constraints.

7
00:00:23,810 --> 00:00:26,140
For scheduling Major League Baseball,

8
00:00:26,140 --> 00:00:29,470
the problem has 100,000 decision variables,

9
00:00:29,470 --> 00:00:32,560
and 200,000 constraints.

10
00:00:32,560 --> 00:00:35,960
For small problems, spreadsheet softwares like LibreOffice

11
00:00:35,960 --> 00:00:37,150
are great.

12
00:00:37,150 --> 00:00:39,120
But for large problems like this,

13
00:00:39,120 --> 00:00:42,780
solving them in LibreOffice would be impossible.

14
00:00:42,780 --> 00:00:45,860
So how are integer optimization models like this

15
00:00:45,860 --> 00:00:48,810
solved in practice?

16
00:00:48,810 --> 00:00:51,910
Many different tricks are used to solve large integer

17
00:00:51,910 --> 00:00:54,050
optimization problems.

18
00:00:54,050 --> 00:00:57,320
One is to reformulate the problem.

19
00:00:57,320 --> 00:00:59,940
The sports scheduling problem with more teams

20
00:00:59,940 --> 00:01:03,550
is often solved by changing the formulation.

21
00:01:03,550 --> 00:01:05,390
Instead of the decision variables

22
00:01:05,390 --> 00:01:08,190
we discussed in this lecture, the variables

23
00:01:08,190 --> 00:01:10,680
are sequences of games.

24
00:01:10,680 --> 00:01:14,120
Additionally, the problem can be split into three smaller

25
00:01:14,120 --> 00:01:17,980
problems that can each be solved separately and much faster

26
00:01:17,980 --> 00:01:21,090
than just solving the whole problem.

27
00:01:21,090 --> 00:01:23,500
Another trick that's often used is

28
00:01:23,500 --> 00:01:26,260
what are called heuristic methods.

29
00:01:26,260 --> 00:01:31,520
These methods find good, but not necessarily optimal, decisions.

30
00:01:31,520 --> 00:01:33,910
A good decision is sometimes accepted,

31
00:01:33,910 --> 00:01:35,780
since the problem is so much easier

32
00:01:35,780 --> 00:01:38,025
to solve using a heuristic method.

33
00:01:38,025 --> 00:01:41,150


34
00:01:41,150 --> 00:01:43,480
In addition to changing the formulation

35
00:01:43,480 --> 00:01:47,080
and using heuristics, there are general purpose optimization

36
00:01:47,080 --> 00:01:50,720
solvers that can solve large problems.

37
00:01:50,720 --> 00:01:54,350
These include CPLEX, Gurobi, GLPK,

38
00:01:54,350 --> 00:01:58,870
and Cbc, a COIN-OR project.

39
00:01:58,870 --> 00:02:02,380
Most practitioners who solve large optimization problems

40
00:02:02,380 --> 00:02:05,670
use one of these software packages.

41
00:02:05,670 --> 00:02:09,650
And in the past 20 years, the speed of integer optimization

42
00:02:09,650 --> 00:02:14,140
solvers has increased by a factor of 250,000,

43
00:02:14,140 --> 00:02:18,330
which doesn't even include the increasing speed of computers.

44
00:02:18,330 --> 00:02:21,960
Assuming a modest machine speed-up of 1,000,

45
00:02:21,960 --> 00:02:23,720
this means that a problem that can

46
00:02:23,720 --> 00:02:27,770
be solved in one second today took seven years

47
00:02:27,770 --> 00:02:30,440
to solve 20 years ago.

48
00:02:30,440 --> 00:02:32,450
Because of this increase in speed,

49
00:02:32,450 --> 00:02:35,220
we're able to solve much larger and more complicated

50
00:02:35,220 --> 00:02:41,090
optimization problems today than just a few years ago.

51
00:02:41,090 --> 00:02:43,980
So how about the sports scheduling problem?

52
00:02:43,980 --> 00:02:47,960
When the Sports Scheduling Group was started in 1996,

53
00:02:47,960 --> 00:02:52,170
integer optimization software was too slow to be useful.

54
00:02:52,170 --> 00:02:54,440
Now, they can use powerful solvers

55
00:02:54,440 --> 00:02:57,060
to generate sports schedules.

56
00:02:57,060 --> 00:02:59,110
Even with these solvers, it can take

57
00:02:59,110 --> 00:03:02,590
months to make the Major League Baseball schedule.

58
00:03:02,590 --> 00:03:06,140
This is due to several reasons, including the enormous list

59
00:03:06,140 --> 00:03:08,060
of ever-changing constraints that they

60
00:03:08,060 --> 00:03:11,880
have to account for, the need to define priorities

61
00:03:11,880 --> 00:03:15,600
on the constraints to find a feasible solution, and the fact

62
00:03:15,600 --> 00:03:19,870
that it takes several iterations to get a good schedule.

63
00:03:19,870 --> 00:03:22,250
But even with these challenges, analytics

64
00:03:22,250 --> 00:03:25,720
offers a significant edge in sports scheduling.

65
00:03:25,720 --> 00:03:28,460
The use of optimization allows for the addition

66
00:03:28,460 --> 00:03:31,690
of new constraints or schedule changes.

67
00:03:31,690 --> 00:03:34,110
A new schedule can easily be generated

68
00:03:34,110 --> 00:03:37,890
based on an updated requirement or request.

69
00:03:37,890 --> 00:03:41,530
Now all professional sports, and most college sports,

70
00:03:41,530 --> 00:03:45,360
construct their schedules using optimization.

71
00:03:45,360 --> 00:03:47,990
In this lecture, we've seen one powerful use

72
00:03:47,990 --> 00:03:49,840
of integer optimization.

73
00:03:49,840 --> 00:03:51,710
But this method has a huge number

74
00:03:51,710 --> 00:03:53,780
of applications, which you'll see

75
00:03:53,780 --> 00:03:57,330
more of in the second lecture, the recitation,

76
00:03:57,330 --> 00:03:59,780
and in the homework assignment.

