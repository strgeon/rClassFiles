0
00:00:00,000 --> 00:00:00,500


1
00:00:00,500 --> 00:00:04,310
Let's now see how the baseline method used by D2Hawkeye

2
00:00:04,310 --> 00:00:07,250
would perform on this data set.

3
00:00:07,250 --> 00:00:09,140
The baseline method would predict

4
00:00:09,140 --> 00:00:12,320
that the cost bucket for a patient in 2009

5
00:00:12,320 --> 00:00:15,860
will be the same as it was in 2008.

6
00:00:15,860 --> 00:00:19,680
So let's create a classification matrix to compute the accuracy

7
00:00:19,680 --> 00:00:22,830
for the baseline method on the test set.

8
00:00:22,830 --> 00:00:27,800
So we'll use the table function, where the actual outcomes are

9
00:00:27,800 --> 00:00:38,110
ClaimsTest$bucket2009, and our predictions are

10
00:00:38,110 --> 00:00:49,530
ClaimsTest$bucket2008.

11
00:00:49,530 --> 00:00:53,570
The accuracy is the sum of the diagonal, the observations that

12
00:00:53,570 --> 00:00:56,030
were classified correctly, divided

13
00:00:56,030 --> 00:00:59,850
by the total number of observations in our test set.

14
00:00:59,850 --> 00:01:22,780
So we want to add up 110138 + 10721 + 2774 + 1539 + 104.

15
00:01:22,780 --> 00:01:25,040
And we want to divide by the total number

16
00:01:25,040 --> 00:01:28,960
of observations in this table, or the number of rows

17
00:01:28,960 --> 00:01:29,640
in ClaimsTest.

18
00:01:29,640 --> 00:01:35,380


19
00:01:35,380 --> 00:01:40,380
So the accuracy of the baseline method is 0.68.

20
00:01:40,380 --> 00:01:42,970
Now how about the penalty error?

21
00:01:42,970 --> 00:01:46,730
To compute this, we need to first create a penalty matrix

22
00:01:46,730 --> 00:01:49,460
in R. Keep in mind that we'll put

23
00:01:49,460 --> 00:01:53,560
the actual outcomes on the left, and the predicted outcomes

24
00:01:53,560 --> 00:01:55,210
on the top.

25
00:01:55,210 --> 00:02:01,460
So we'll call it PenaltyMatrix, which

26
00:02:01,460 --> 00:02:06,290
will be equal to a matrix object in R.

27
00:02:06,290 --> 00:02:08,020
And then we need to give the numbers

28
00:02:08,020 --> 00:02:14,650
that should fill up the matrix: 0, 1, 2, 3, 4.

29
00:02:14,650 --> 00:02:17,740
That'll be the first row.

30
00:02:17,740 --> 00:02:22,590
And then 2, 0, 1, 2, 3.

31
00:02:22,590 --> 00:02:24,800
That'll be the second row.

32
00:02:24,800 --> 00:02:30,170
4, 2, 0, 1, 2 for the third row.

33
00:02:30,170 --> 00:02:35,110
6, 4, 2, 0, 1 for the fourth row.

34
00:02:35,110 --> 00:02:41,720
And finally, 8, 6, 4, 2, 0 for the fifth row.

35
00:02:41,720 --> 00:02:45,130
And then after the parentheses, type a comma,

36
00:02:45,130 --> 00:02:56,420
and then byrow = TRUE, and then add nrow = 5.

37
00:02:56,420 --> 00:02:59,360
Close the parentheses, and hit Enter.

38
00:02:59,360 --> 00:03:01,400
So what did we just create?

39
00:03:01,400 --> 00:03:05,115
Type PenaltyMatrix and hit Enter.

40
00:03:05,115 --> 00:03:08,260


41
00:03:08,260 --> 00:03:11,700
So with the previous command, we filled up our matrix row

42
00:03:11,700 --> 00:03:13,620
by row.

43
00:03:13,620 --> 00:03:16,160
The actual outcomes are on the left,

44
00:03:16,160 --> 00:03:18,950
and the predicted outcomes are on the top.

45
00:03:18,950 --> 00:03:21,810
So as we saw in the slides, the worst outcomes

46
00:03:21,810 --> 00:03:25,160
are when we predict a low cost bucket,

47
00:03:25,160 --> 00:03:29,110
but the actual outcome is a high cost bucket.

48
00:03:29,110 --> 00:03:30,900
We still give ourselves a penalty

49
00:03:30,900 --> 00:03:33,670
when we predict a high cost bucket

50
00:03:33,670 --> 00:03:39,090
and it's actually a low cost bucket, but it's not as bad.

51
00:03:39,090 --> 00:03:42,820
So now to compute the penalty error of the baseline method,

52
00:03:42,820 --> 00:03:45,570
we can multiply our classification matrix

53
00:03:45,570 --> 00:03:47,700
by the penalty matrix.

54
00:03:47,700 --> 00:03:50,530
So go ahead and hit the Up arrow to get back

55
00:03:50,530 --> 00:03:52,390
to where you created the classification

56
00:03:52,390 --> 00:03:55,210
matrix with the table function.

57
00:03:55,210 --> 00:03:58,950
And we're going to surround the entire table function

58
00:03:58,950 --> 00:04:04,150
by as.matrix to convert it to a matrix

59
00:04:04,150 --> 00:04:07,615
so that we can multiply it by our penalty matrix.

60
00:04:07,615 --> 00:04:10,730
So now at the end, close the parentheses

61
00:04:10,730 --> 00:04:17,220
and then multiply by PenaltyMatrix and hit Enter.

62
00:04:17,220 --> 00:04:20,100
So what this does is it takes each number

63
00:04:20,100 --> 00:04:23,160
in the classification matrix and multiplies it

64
00:04:23,160 --> 00:04:27,170
by the corresponding number in the penalty matrix.

65
00:04:27,170 --> 00:04:29,360
So now to compute the penalty error,

66
00:04:29,360 --> 00:04:31,750
we just need to sum it up and divide

67
00:04:31,750 --> 00:04:34,930
by the number of observations in our test set.

68
00:04:34,930 --> 00:04:37,740
So scroll up once, and then we'll

69
00:04:37,740 --> 00:04:40,760
just surround our entire previous command

70
00:04:40,760 --> 00:04:41,740
by the sum function.

71
00:04:41,740 --> 00:04:47,960


72
00:04:47,960 --> 00:04:56,400
And we'll divide by the number of rows in ClaimsTest

73
00:04:56,400 --> 00:04:58,150
and hit Enter.

74
00:04:58,150 --> 00:05:02,850
So the penalty error for the baseline method is 0.74.

75
00:05:02,850 --> 00:05:05,180
In the next video, our goal will be

76
00:05:05,180 --> 00:05:10,790
to create a CART model that has an accuracy higher than 68%

77
00:05:10,790 --> 00:05:14,292
and a penalty error lower than 0.74.

78
00:05:14,292 --> 00:05:14,792


