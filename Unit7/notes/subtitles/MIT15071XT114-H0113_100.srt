0
00:00:00,000 --> 00:00:00,500


1
00:00:00,500 --> 00:00:02,290
So now we're going to try plotting a world

2
00:00:02,290 --> 00:00:04,810
map with a new data set that has the number

3
00:00:04,810 --> 00:00:07,580
of international students from each country.

4
00:00:07,580 --> 00:00:09,080
So first of all, we're going to need

5
00:00:09,080 --> 00:00:12,575
to use the ggmap package, which you may need to install.

6
00:00:12,575 --> 00:00:15,940


7
00:00:15,940 --> 00:00:17,410
And we're going to load in the data

8
00:00:17,410 --> 00:00:18,784
set, which is called intlall.csv.

9
00:00:18,784 --> 00:00:22,534


10
00:00:22,534 --> 00:00:23,575
So read.csv(intlall.csv).

11
00:00:23,575 --> 00:00:27,415


12
00:00:27,415 --> 00:00:34,290
And I'm going to do stringsAsFactors = FALSE.

13
00:00:34,290 --> 00:00:34,790
OK?

14
00:00:34,790 --> 00:00:38,500
Let's look at the first few rows of intlall.

15
00:00:38,500 --> 00:00:41,800


16
00:00:41,800 --> 00:00:45,210
So you see that each row corresponds to a country.

17
00:00:45,210 --> 00:00:47,350
There's a citizenship column that's

18
00:00:47,350 --> 00:00:50,480
the country name, number of undergraduates, number

19
00:00:50,480 --> 00:00:54,210
of graduates, special undergraduates and graduates,

20
00:00:54,210 --> 00:00:57,630
exchange or visiting, and a total column.

21
00:00:57,630 --> 00:01:00,290
Now there's these NAs in here, but they're not really NAs.

22
00:01:00,290 --> 00:01:01,530
They're just 0's.

23
00:01:01,530 --> 00:01:03,990
So what we're going to do is say,

24
00:01:03,990 --> 00:01:06,540
all these NAs should be 0's.

25
00:01:06,540 --> 00:01:23,169
So in intlall, all entries that are NA, should be 0.

26
00:01:23,169 --> 00:01:24,960
And let's look at the first few rows again.

27
00:01:24,960 --> 00:01:28,820


28
00:01:28,820 --> 00:01:29,320
OK.

29
00:01:29,320 --> 00:01:31,180
Much better.

30
00:01:31,180 --> 00:01:34,520
Right, so next step is to load the world map.

31
00:01:34,520 --> 00:01:40,110
So let's call it world_map = map_data("world").

32
00:01:40,110 --> 00:01:46,070


33
00:01:46,070 --> 00:01:50,050
We did something similar in the lecture with the state data.

34
00:01:50,050 --> 00:01:54,410
So let's look at the structure of the world_map.

35
00:01:54,410 --> 00:01:58,740
So the first two columns are the longitude and latitude;

36
00:01:58,740 --> 00:02:01,870
third column is something called group --

37
00:02:01,870 --> 00:02:03,680
that's actually a group for each country,

38
00:02:03,680 --> 00:02:07,315
using a different number for each country; order,

39
00:02:07,315 --> 00:02:11,250
we'll get to that later; region is just the country name,

40
00:02:11,250 --> 00:02:15,353
and subregion is sometimes used for some countries to describe

41
00:02:15,353 --> 00:02:19,900
islands and other things like that.

42
00:02:19,900 --> 00:02:24,150
So we want to shove the world_map data

43
00:02:24,150 --> 00:02:27,400
frame and the intlall data frame into one data frame,

44
00:02:27,400 --> 00:02:29,840
so we can use it for ggplot.

45
00:02:29,840 --> 00:02:42,240
So let's say world_map is a merge of world_map and intlall.

46
00:02:42,240 --> 00:02:44,020
Now, in world_map, the country name

47
00:02:44,020 --> 00:02:48,910
is just called region, as you can see right here.

48
00:02:48,910 --> 00:02:52,240
And in the intlall, the country name

49
00:02:52,240 --> 00:02:54,470
is actually called Citizenship.

50
00:02:54,470 --> 00:03:00,510


51
00:03:00,510 --> 00:03:01,430
OK.

52
00:03:01,430 --> 00:03:03,300
So let's look at the structure of world_map

53
00:03:03,300 --> 00:03:06,820
just to make sure it makes sense.

54
00:03:06,820 --> 00:03:08,300
Looks good.

55
00:03:08,300 --> 00:03:09,360
OK.

56
00:03:09,360 --> 00:03:13,890
So to plot a map, we use the geom_polygon geometry.

57
00:03:13,890 --> 00:03:17,284
So start off ggplot(world_map, aes(x = long, y = lat,

58
00:03:17,284 --> 00:03:17,950
group = group)).

59
00:03:17,950 --> 00:03:34,700


60
00:03:34,700 --> 00:03:37,685
We want to use geom_polygon as the geometry.

61
00:03:37,685 --> 00:03:43,350


62
00:03:43,350 --> 00:03:45,000
Countries will be filled in in white,

63
00:03:45,000 --> 00:03:49,915
and their borders will be in black.

64
00:03:49,915 --> 00:03:53,270


65
00:03:53,270 --> 00:03:56,964
And we'll use a Mercator projection.

66
00:03:56,964 --> 00:03:58,880
There's a few other options in there, as well.

67
00:03:58,880 --> 00:04:03,560


68
00:04:03,560 --> 00:04:04,310
OK.

69
00:04:04,310 --> 00:04:06,850
So that looks kind of like a world map.

70
00:04:06,850 --> 00:04:09,304
There's a few things going on here.

71
00:04:09,304 --> 00:04:10,720
So first of all, all the countries

72
00:04:10,720 --> 00:04:13,640
look like big black blobs.

73
00:04:13,640 --> 00:04:17,010
What on earth is going on, you might say.

74
00:04:17,010 --> 00:04:21,339
Well, sometimes the merge can reorder the data.

75
00:04:21,339 --> 00:04:24,610
And it turns out that what the world_map data frame really is

76
00:04:24,610 --> 00:04:27,530
is actually a list of latitude and longitude points

77
00:04:27,530 --> 00:04:30,490
that define the border of each country.

78
00:04:30,490 --> 00:04:33,660
So if we accidentally reorder the data frame

79
00:04:33,660 --> 00:04:35,560
they no longer make any sense.

80
00:04:35,560 --> 00:04:37,050
And as it goes from point to point,

81
00:04:37,050 --> 00:04:39,216
the points might be on the other side of the country

82
00:04:39,216 --> 00:04:40,900
as it defines the polygon.

83
00:04:40,900 --> 00:04:45,700
So, we have to reorder the data in the correct order.

84
00:04:45,700 --> 00:04:49,060
So this command is a little bit complicated looking,

85
00:04:49,060 --> 00:04:51,880
but when you break it down, it's not so bad.

86
00:04:51,880 --> 00:04:56,850
So, we take the world_map, and we're going to reorder it.

87
00:04:56,850 --> 00:05:00,670
So world_map, we're going to reorder the rows.

88
00:05:00,670 --> 00:05:03,498
We're going to order the rows based on, first

89
00:05:03,498 --> 00:05:07,370
of all, the group, which is pretty much

90
00:05:07,370 --> 00:05:13,695
equivalent to the country, and then the order variable, which

91
00:05:13,695 --> 00:05:17,710
is just the correct order for the border points.

92
00:05:17,710 --> 00:05:21,510
And we're going to take all the columns, of course.

93
00:05:21,510 --> 00:05:22,280
Done.

94
00:05:22,280 --> 00:05:28,002
So if we go and try plotting it again -- so ggplot--

95
00:05:28,002 --> 00:05:30,191
I guess I should go up, up.

96
00:05:30,191 --> 00:05:33,190
There we go, much easier.

97
00:05:33,190 --> 00:05:35,910
Right, so now we have the map, and it

98
00:05:35,910 --> 00:05:37,960
looks far more reasonable.

99
00:05:37,960 --> 00:05:40,040
OK, next problem.

100
00:05:40,040 --> 00:05:42,400
Some of the countries are missing.

101
00:05:42,400 --> 00:05:45,150
Now of course, the USA is missing

102
00:05:45,150 --> 00:05:47,330
because MIT is in the USA, so that

103
00:05:47,330 --> 00:05:53,480
wouldn't be an international student coming from the USA.

104
00:05:53,480 --> 00:05:56,460
And some parts of Africa are missing, presumably

105
00:05:56,460 --> 00:05:58,960
because there are no students at MIT right now

106
00:05:58,960 --> 00:06:01,620
who are from those countries.

107
00:06:01,620 --> 00:06:04,485
But you'll also notice that Russia is missing,

108
00:06:04,485 --> 00:06:09,359
and a lot of countries near it, as well as China.

109
00:06:09,359 --> 00:06:10,942
Which is definitely not true because I

110
00:06:10,942 --> 00:06:16,020
have many friends at MIT who are from Russia and China.

111
00:06:16,020 --> 00:06:20,010
So, what do we do about that?

112
00:06:20,010 --> 00:06:22,620
The reason China is missing is that it

113
00:06:22,620 --> 00:06:25,890
has a different name in the MIT data frame

114
00:06:25,890 --> 00:06:27,720
than in the world_map data frame.

115
00:06:27,720 --> 00:06:29,880
So when we merged them, it was dropped

116
00:06:29,880 --> 00:06:33,210
from the data set because it didn't match up.

117
00:06:33,210 --> 00:06:40,110
So to see what it's called in the MIT data frame,

118
00:06:40,110 --> 00:06:41,460
let's just do a table.

119
00:06:41,460 --> 00:06:45,760
There's a few ways to do this, but this is pretty easy.

120
00:06:45,760 --> 00:06:47,410
OK, so we get a list of all the names.

121
00:06:47,410 --> 00:06:50,272


122
00:06:50,272 --> 00:06:52,500
If we scroll all the way up, we'll

123
00:06:52,500 --> 00:06:56,720
see it says "China (People's Republic Of)".

124
00:06:56,720 --> 00:07:00,290
Now, in the world_map data frame,

125
00:07:00,290 --> 00:07:01,600
it's simply called "China".

126
00:07:01,600 --> 00:07:04,360


127
00:07:04,360 --> 00:07:09,720
So, what we can do is change the MIT data frame.

128
00:07:09,720 --> 00:07:20,710
So let's say the citizenship column, the one row where

129
00:07:20,710 --> 00:07:26,300
it equals "China (People's Republic Of)"

130
00:07:26,300 --> 00:07:32,180
should just be "China".

131
00:07:32,180 --> 00:07:34,690
OK, let's check.

132
00:07:34,690 --> 00:07:36,710
Do the table again.

133
00:07:36,710 --> 00:07:38,736
Scroll all the way up.

134
00:07:38,736 --> 00:07:41,955


135
00:07:41,955 --> 00:07:43,970
There it is, China.

136
00:07:43,970 --> 00:07:44,950
So we've fixed that.

137
00:07:44,950 --> 00:07:51,230
So now the MIT data frame is consistent with the world_map

138
00:07:51,230 --> 00:07:52,870
data frame.

139
00:07:52,870 --> 00:07:56,270
So now we have to go through the merge again.

140
00:07:56,270 --> 00:08:02,960
So let's say world_map is a merge

141
00:08:02,960 --> 00:08:10,590
of a fresh copy of the map_data, the intlall data

142
00:08:10,590 --> 00:08:11,875
frame with China fixed.

143
00:08:11,875 --> 00:08:14,800


144
00:08:14,800 --> 00:08:20,310
It's called region in the world_map data,

145
00:08:20,310 --> 00:08:27,490
and it's called Citizenship in the MIT data.

146
00:08:27,490 --> 00:08:31,950
Alright, now we need to do the reordering again.

147
00:08:31,950 --> 00:08:37,589
So press up a few times until we find it.

148
00:08:37,589 --> 00:08:38,130
There it was.

149
00:08:38,130 --> 00:08:42,080
So there's the reordering command.

150
00:08:42,080 --> 00:08:42,580
OK.

151
00:08:42,580 --> 00:08:44,200
And we should be good to go, now.

152
00:08:44,200 --> 00:08:46,140
So let's try plotting it.

153
00:08:46,140 --> 00:08:51,900
So ggplot, the world_map data frame.

154
00:08:51,900 --> 00:08:55,840
The aesthetic, x is the longitude, y is the latitude.

155
00:08:55,840 --> 00:08:58,410
We need to group countries together,

156
00:08:58,410 --> 00:09:02,690
so it doesn't all crisscross over the map.

157
00:09:02,690 --> 00:09:06,410
We're going to use geom_polygon again.

158
00:09:06,410 --> 00:09:08,250
This time though, let's actually fill them

159
00:09:08,250 --> 00:09:10,416
with a color that's proportional to the total number

160
00:09:10,416 --> 00:09:11,950
of students.

161
00:09:11,950 --> 00:09:13,960
We'll still outline them in black, though.

162
00:09:13,960 --> 00:09:17,110


163
00:09:17,110 --> 00:09:19,340
And we'll use the Mercator projection.

164
00:09:19,340 --> 00:09:25,430


165
00:09:25,430 --> 00:09:27,190
Much better.

166
00:09:27,190 --> 00:09:28,899
So Russia is missing for similar reasons,

167
00:09:28,899 --> 00:09:31,273
but we won't deal with that now because it's a little bit

168
00:09:31,273 --> 00:09:31,910
annoying.

169
00:09:31,910 --> 00:09:34,960
But you get the idea.

170
00:09:34,960 --> 00:09:36,860
This is pretty interesting actually.

171
00:09:36,860 --> 00:09:43,650
So we can see that Canada, and China, and India supply

172
00:09:43,650 --> 00:09:48,470
a large number of international students to MIT.

173
00:09:48,470 --> 00:09:50,830
But it is a little bit confusing doing it

174
00:09:50,830 --> 00:09:53,900
on a per country basis, because Europe, presumably,

175
00:09:53,900 --> 00:09:56,590
has quite a few students at MIT.

176
00:09:56,590 --> 00:09:59,150
But because Europe is made up of many small countries,

177
00:09:59,150 --> 00:10:01,410
it doesn't look very impressive.

178
00:10:01,410 --> 00:10:02,940
Maybe if all the European countries

179
00:10:02,940 --> 00:10:04,439
were grouped together, it would look

180
00:10:04,439 --> 00:10:06,530
about the same color as Canada.

181
00:10:06,530 --> 00:10:09,740
But it's hard to tell.

182
00:10:09,740 --> 00:10:11,800
There are also other projections we can look at.

183
00:10:11,800 --> 00:10:14,040
So this is a Mercator projection.

184
00:10:14,040 --> 00:10:16,920
What I want to show you is an orthographic projection that

185
00:10:16,920 --> 00:10:20,110
allows you to sort of view the map in 3D, like a globe.

186
00:10:20,110 --> 00:10:23,150
So let's try that out.

187
00:10:23,150 --> 00:10:29,500
ggplot, world_map, aesthetics are the same.

188
00:10:29,500 --> 00:10:35,710


189
00:10:35,710 --> 00:10:38,220
Actually, let me do this the right way.

190
00:10:38,220 --> 00:10:40,050
I'll just press up.

191
00:10:40,050 --> 00:10:41,080
OK.

192
00:10:41,080 --> 00:10:45,400
Let's change it to orthographic projection.

193
00:10:45,400 --> 00:10:49,010
And I want to find, now, an orientation.

194
00:10:49,010 --> 00:10:51,850
And this is almost like thinking about where in the world

195
00:10:51,850 --> 00:10:53,880
you want to focus on.

196
00:10:53,880 --> 00:10:57,310
So this is a latitude and longitude, 20 degrees

197
00:10:57,310 --> 00:10:59,072
and 30 degrees.

198
00:10:59,072 --> 00:11:03,260
If we run this, we should get a map

199
00:11:03,260 --> 00:11:07,010
centered above North Africa.

200
00:11:07,010 --> 00:11:08,730
That's quite a nice visualization

201
00:11:08,730 --> 00:11:12,030
because if you want to look just at Africa and Europe,

202
00:11:12,030 --> 00:11:13,690
this is the way to go.

203
00:11:13,690 --> 00:11:15,580
We can still see China, and Canada, and South

204
00:11:15,580 --> 00:11:18,710
America in there, as well.

205
00:11:18,710 --> 00:11:20,840
Let's do something a little bit more personal.

206
00:11:20,840 --> 00:11:23,240
I want to change the coordinates, now,

207
00:11:23,240 --> 00:11:30,858
to -37 and 175.

208
00:11:30,858 --> 00:11:34,840
Now it's centered on my hometown of Auckland, New Zealand.

